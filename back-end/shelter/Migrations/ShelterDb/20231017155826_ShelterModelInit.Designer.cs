// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shelter.DataBaseContext.ShelterDbContext;

#nullable disable

namespace shelter.Migrations.ShelterDb
{
    [DbContext(typeof(ShelterDbContext))]
    [Migration("20231017155826_ShelterModelInit")]
    partial class ShelterModelInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("shelter.Models.ShelterModels.ShelterHabbitsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HoursAlone")
                        .HasColumnType("int");

                    b.Property<string>("Lifestyle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterModelId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WalksNumber")
                        .HasColumnType("int");

                    b.Property<int>("WalksTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShelterModelId");

                    b.ToTable("ShelterQuestionsHabbits");
                });

            modelBuilder.Entity("shelter.Models.ShelterModels.ShelterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailShelter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("shelter.Models.ShelterModels.ShelterPetDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnimalsBefore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnimalsBeforeText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareAlone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetPlaceAlone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShelterModelId");

                    b.ToTable("ShelterQuestionsPetDetails");
                });

            modelBuilder.Entity("shelter.Models.ShelterModels.ShelterResidenceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Animals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Elevator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FenceHeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseMates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HousingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertySize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShelterModelId");

                    b.ToTable("ShelterQuestionsResidence");
                });

            modelBuilder.Entity("shelter.Models.ShelterModels.ShelterHabbitsModel", b =>
                {
                    b.HasOne("shelter.Models.ShelterModels.ShelterModel", "ShelterModel")
                        .WithMany("ShelterHabbits")
                        .HasForeignKey("ShelterModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShelterModel");
                });

            modelBuilder.Entity("shelter.Models.ShelterModels.ShelterPetDetailsModel", b =>
                {
                    b.HasOne("shelter.Models.ShelterModels.ShelterModel", "ShelterModel")
                        .WithMany("ShelterPetDetails")
                        .HasForeignKey("ShelterModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShelterModel");
                });

            modelBuilder.Entity("shelter.Models.ShelterModels.ShelterResidenceModel", b =>
                {
                    b.HasOne("shelter.Models.ShelterModels.ShelterModel", "ShelterModel")
                        .WithMany("ShelterResidence")
                        .HasForeignKey("ShelterModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShelterModel");
                });

            modelBuilder.Entity("shelter.Models.ShelterModels.ShelterModel", b =>
                {
                    b.Navigation("ShelterHabbits");

                    b.Navigation("ShelterPetDetails");

                    b.Navigation("ShelterResidence");
                });
#pragma warning restore 612, 618
        }
    }
}
